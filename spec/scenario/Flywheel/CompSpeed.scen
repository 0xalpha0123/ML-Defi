-- Tests for the grants and math patch

Macro FlywheelComptroller price=1.0 borrowRate=0.000005 compInitAmount=5000000e18
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    ----g2
    ComptrollerImpl Deploy ScenarioG2 ComptrollerScenG2
    Unitroller SetPendingImpl ComptrollerScenG2
    ComptrollerImpl ComptrollerScenG2 BecomeG2
    --list some tokens
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetMaxAssets 20
    Comptroller SetCloseFactor 0.5
    Comptroller LiquidationIncentive 1.1
    NewCToken ZRX cZRX
    NewCToken BAT cBAT
    Support cZRX collateralFactor:0.5
    Support cBAT collateralFactor:0.5
    -- final
    ComptrollerImpl Deploy ScenarioG3 ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen BecomeG3 1e18 [cZRX cBAT]
    Erc20 Deploy Standard COMP "COMP Token" 18
    Give (Address Comptroller) compInitAmount COMP

Macro GrantsComptroller
    FlywheelComptroller
    -- g4
    ComptrollerImpl Deploy ScenarioG4 ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen BecomeG4
    -- g5
    ComptrollerImpl Deploy ScenarioG5 ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen BecomeG5
    -- current
    ComptrollerImpl Deploy Scenario ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen Become

Macro InitSpeeds
    Prep Geoff 100e18 ZRX cZRX
    Mint Geoff 50e18 cZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn Some BAT cBAT
    Mint Coburn 6e18 cBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn cBAT
    Borrow Coburn 1e18 cZRX
    Comptroller SetCompSpeed cZRX 1
    Comptroller SetCompSpeed cBAT 1
    Comptroller RefreshCompSpeeds
    Comptroller Send "setCompAddress(address)" (Address COMP)

Test "COMP speed can be set per market"
    GrantsComptroller
    InitSpeeds
    -- Baseline comp amounts
    Assert Equal (Comptroller CompAccrued Geoff) 0
    Assert Equal (Erc20 COMP TokenBalance Geoff) 0
    -- Comp speed can be set
    Comptroller SetCompSpeed cZRX 2
    FastForward 1000 Blocks
    Comptroller ClaimComp Geoff
    Assert Equal (Comptroller CompAccrued Geoff) 0
    Assert Equal (Erc20 COMP TokenBalance Geoff) 2000
    -- Comp speed can be changed
    Comptroller SetCompSpeed cZRX 4
    FastForward 1000 Blocks
    Comptroller ClaimComp Geoff
    Assert Equal (Comptroller CompAccrued Geoff) 0
    Assert Equal (Erc20 COMP TokenBalance Geoff) 6000
    -- Comp speed can be removed
    Comptroller SetCompSpeed cZRX 0
    FastForward 1000 Blocks
    Comptroller ClaimComp Geoff
    Assert Equal (Comptroller CompAccrued Geoff) 0
    Assert Equal (Erc20 COMP TokenBalance Geoff) 6000

Test "Set comp rate is removed"
    GrantsComptroller
    InitSpeeds
    AllowFailures
    Comptroller SetCompRate 5

Test "Comp is not claimed automatically"
    GrantsComptroller
    InitSpeeds
    Comptroller SetCompSpeed cZRX 2
    FastForward 100000 Blocks
    -- Check comp is not claimed automatically
    Mint Geoff 50e18 cZRX
    Assert Equal (Erc20 COMP TokenBalance Geoff) 0
    -- Confirm there was comp to claim
    Comptroller ClaimComp Geoff
    Assert Equal (Erc20 COMP TokenBalance Geoff) 200000
